<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
    <comment>呼叫中心查询客户信息sql</comment>

    <!-- 根据来电号码查询临时表客户列表
    <entry key="sql.query.customerpending.list">
        <![CDATA[
		SELECT
            tcp.id AS customerId,
            tcp.fullName AS name,
            tcp.sexText AS sex,
            0 AS hasApprove
        FROM
            tmp_customer_pending AS tcp
        WHERE
            (tcp.mainMobile = #mainMobile#
        OR
            tcp.standbyMobile = #standbyMobile#
        OR    
            tcp.homeTel = #homeTel#
        OR    
            tcp.officeTel = #officeTel#)
        AND	tcp.approveStatus = 1
        AND	tcp.operator <> 2
        AND	tcp.isDeleted = 0
	    ]]>
    </entry>-->
    
     <!-- 根据来电号码查询客户列表-->
    <!--
    <entry key="sql.query.customer.list">
        <![CDATA[
		SELECT
            mc.id AS customerId,
            mc.fullName AS name,
            mc.sex AS sex,
            mc.mainMobile AS phone,
            1 AS hasApprove
        FROM
            main_customer AS mc
        WHERE
            (mc.mainMobile = #mainMobile#
        OR
            mc.standbyMobile = #standbyMobile#
        OR
            mc.homeTel = #homeTel#
        OR
            mc.officeTel = #officeTel#)
        AND	mc.isDeleted = 0

        UNION

        SELECT
            tcp.id AS customerId,
            tcp.fullName AS name,
            tcp.sex AS sex,
            tcp.mainMobile AS phone,
            0 AS hasApprove
        FROM
            tmp_customer_pending AS tcp
        WHERE
            (tcp.mainMobile = #mainMobile#
        OR
            tcp.standbyMobile = #standbyMobile#
        OR
            tcp.homeTel = #homeTel#
        OR
            tcp.officeTel = #officeTel#)
        AND	tcp.approveStatus = 1
        AND	tcp.operator = 1
        AND	tcp.isDeleted = 0
	    ]]>
    </entry>
    -->
    
    <!-- 根据客户id查询客户特殊身份-->
    <entry key="sql.query.customer.specialid.callcenter">
        <![CDATA[
		SELECT
			dcs.id AS id,
			dcs.customerId AS customerId,
            dcs.identity AS identity,
			dcs.identityText AS identityText,
			dcs.beginDate AS beginDate,
			dcs.endDate AS endDate,
			dcs.duration AS duration,
            1 AS hasApprove
        FROM
            dim_cust_specialidentity as dcs
        WHERE
            dcs.customerId = #customerId#
		AND dcs.isDeleted = 0
		]]>
    </entry>
    
		<!-- 根据客户id查询临时表（作添加操作的数据）客户特殊身份-->
   		<entry key="sql.query.customer.specialidpending.callcenter">
        <![CDATA[

			SELECT
			tcsp.id AS id,
			tcsp.customerId AS customerId,
            tcsp.identity AS identity,
			tcsp.identityText AS identityText,
			tcsp.beginDate AS benginDate,
			tcsp.endDate AS endDate,
			tcsp.duration AS duration,
            0 AS hasApprove
        FROM
            tmp_cust_specialidentity_pending as tcsp
        WHERE
            tcsp.customerId = #customerId#	
		AND tcsp.approveStatus = 1
		AND tcsp.isDeleted = 0
		AND tcsp.operator = 1

	    ]]>
    </entry>

	<!-- 根据客户id查询客户兴趣爱好-->
    <entry key="sql.query.customer.hobbiespending.callcenter">
        <![CDATA[
				SELECT
					tchp.id AS id,
					tchp.customerId AS customerId,
					tchp.contentId AS contentId,
					tchp.contentText AS contentText,
					0 AS hasApprove
				FROM
					tmp_cust_hobbies_pending AS tchp
				WHERE
					tchp.customerId = #customerId#
				AND
					tchp.approveStatus = 1
				AND
					tchp.operator = 1
				AND
					tchp.isDeleted = 0
					
			]]>
    </entry>
				
		<!-- 根据客户id查询客户兴趣爱好-->
    <entry key="sql.query.customer.hobbies.callcenter">
        <![CDATA[
				
				SELECT
					dch.id AS id,
					dch.customerId AS customerId,
					dch.contentId AS contentId,
					dch.contentText AS contentText,
					1 AS hasApprove
				FROM
					dim_cust_hobbies AS dch
				WHERE
					dch.customerId = #customerId#
				AND
					dch.isDeleted = 0
	    ]]>
    </entry>

	<!-- 根据客户id查询客户-->
    <entry key="sql.query.customer.list.id">
        <![CDATA[			
			select a.id as customerId,a.fullName as name,a.mainMobile as phone,a.sex as sex,
			(select GROUP_CONCAT(b.identity) from dim_cust_specialidentity b where customerId=a.id and b.isDeleted=0) as identity,
			GROUP_CONCAT(c.contentId) as contentId
			from main_customer a
            Left  JOIN dim_cust_hobbies c on c.customerId=a.id and c.isDeleted=0
            where a.id=#customerId#
            GROUP BY a.id
	    ]]>
    </entry>


    <!--添加兴趣爱好临时表数据-->
    <entry key="sql.insert.customer.hobbypending">
        <![CDATA[
			Insert into tmp_cust_hobbies_pending
				(id,customerId,contentId,contentText,creator,creatorId,createTime,approveStatus,operator,`from`) 
			Values 
				(#id#,#customerId#,#contentId#,
				(SELECT value FROM dim_dictionary_items WHERE dictionaryId = (SELECT id FROM dim_dictionary WHERE code = 'CustomerHobbies' limit 1 ) AND code = #contentId#  LIMIT 1),
				#creator#,#creatorId#,NOW(),#approveStatus#,#operator#,#from#)

        ]]>
    </entry>
    
    <!--添加特殊身份临时表数据-->
    <entry key="sql.insert.customer.specialidentitypending">
        <![CDATA[
			INSERT INTO tmp_cust_specialidentity_pending
		        (id, customerId, identity, identityText, beginDate, endDate, duration, creator, creatorId, createTime,approveStatus,operator,`from`)
		        VALUES
		        (#id#, #customerId#, #identity#,
		        (SELECT value FROM dim_dictionary_items WHERE dictionaryId = (SELECT id FROM dim_dictionary WHERE code = 'CustomerIdentity' limit 1) AND code = #identity#  LIMIT 1),
		        #beginDate#,#endDate#,#duration#,#creator#,#creatorId#,now(),#approveStatus#,#operator#,#from#);
        ]]>
    </entry>
    
    <!--添加客户房屋关系临时表数据-->
    <entry key="sql.insert.customer.house.relationPending">
        <![CDATA[
				insert into tmp_customer_house_pending
					(houseId,customerId,relationType,projectId,creator,creatorId,createTime,approveStatus,`from`,operator)
				VALUES
				 	(#houseId#,#customerId#,#relationType#,#projectId#,
				 	#creator#,#creatorId#,NOW(),#approveStatus#,#from#,#operator#)
        ]]>
    </entry>

    
    <!--客户临时表插入数据-->
    <entry key="sql.customerpending.add">
        <![CDATA[
			Insert into `tmp_customer_pending`
				(`id`,`crmCustomerId`,`fullName`,`sex`,`mainMobile`,`creator`,`creatorId`,`createTime`,`approveStatus`,`from`,`operator`)
			Values 
				(#id#,#crmCustomerId#,#fullName#,#sex#,
				#mainMobile#,#creator#,#creatorId#,NOW(),#approveStatus#,#from#,#operator#)
	
        ]]>
    </entry>
    
    <!-- 根据客户code查询客户id-->
    <entry key="sql.query.customerCode.id">
        <![CDATA[			
			SELECT 
				id 
			FROM 
				main_customer 
			WHERE 
				isDeleted = 0
			AND
				`code` = #customerCode# 
			LIMIT 1;
	    ]]>
    </entry>
    
    <!-- 根据房屋code查询房屋id-->
    <entry key="sql.query.houseCode.id">
        <![CDATA[			
			SELECT 
				id 
			FROM 
				main_house 
			WHERE 
				`code` = #houseCode# 
			AND 
				isDeleted = 0 
			LIMIT 1;
	    ]]>
    </entry>


    <!-- 插入兴趣爱好(临时表)-->
    <entry key="sql.insert.customerPending.hobby">
        <![CDATA[
			insert into tmp_cust_hobbies_pending(`id`,`customerId`,`contentId`,`creator`,`creatorId`,`createtime`,`isDeleted`)
            VALUES(#id#,#customerId#,#contentId#,#creator#,#creatorId#,NOW(),0)
	    ]]>
    </entry>

    <!-- 插入特殊身份(临时表)-->
    <entry key="sql.insert.customerPending.identity">
        <![CDATA[
			insert into tmp_cust_specialidentity_pending(`id`,`customerId`,`identity`,`creator`,`creatorId`,`createtime`,`isDeleted`)
			VALUES(#id#,#customerId#,#contentId#,#creator#,#creatorId#,NOW(),0)
	    ]]>
    </entry>

    <!-- 判断一个临时客户是否已经审批过(临时表)-->
    <entry key="sql.exist.customerPending">
        <![CDATA[
        select a.crmCustomerId from tmp_customer_pending a INNER JOIN  tmp_customer_house_pending b on b.customerId=a.id
        where a.fullName=#fullName# and a.mainMobile = #mainMobile# and b.projectCode=#projectCode#
        and a.approveStatus='2'
	    ]]>
    </entry>


    <!-- 根据来电号码查询客户详细信息-->
    <entry key="sql.query.callercustomer">
        <![CDATA[
            select * from (
            (
            select customerId,b.fullName,c.`name`,a.houseId,'1' as hasApprove,e.buildingName,e.projectId,
            GROUP_CONCAT(relationType) as relationType, b.sex,
            (select GROUP_CONCAT(contentId) from dim_cust_hobbies b where b.customerId=a.customerId and IFNULL(isDeleted,0)=0 GROUP BY b.customerId)as contentId,
            (select GROUP_CONCAT(identity) from dim_cust_specialidentity
                where  IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate > now() and beginDate < now()
                    or IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate is NULL GROUP BY customerId)as identity
             from mid_customer_house a
            INNER JOIN main_customer b on b.id=a.customerId
            INNER JOIN main_house c on c.id=a.houseid
            INNER JOIN mid_project_house e on e.houseId=a.houseId
            where 1=1 and IFNULL(a.isDeleted,0)=0 and IFNULL(b.isDeleted,0)=0 and
			(b.mainMobile=#callNumber# or b.standbyMobile=#callNumber# or b.homeTel=#callNumber# or b.officeTel = #callNumber# )
			GROUP BY a.houseId
            )
            UNION (
            select customerId,b.fullName,c.`name`,a.houseId,'0' as hasApprove,e.buildingName,a.projectId,
            GROUP_CONCAT(relationType) as relationType, b.sex,
            (select GROUP_CONCAT(contentId) from tmp_cust_hobbies_pending b where b.customerId=a.customerId and IFNULL(isDeleted,0)=0 GROUP BY b.customerId)as contentId,
            (select GROUP_CONCAT(identity) from tmp_cust_specialidentity_pending
                where IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate > now() and beginDate < now()
                   or IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate is NULL GROUP BY customerId)as identity
             from tmp_customer_house_pending a
            INNER JOIN tmp_customer_pending b on b.id=a.customerId
            LEFT   JOIN main_house c on c.id=a.houseid
            LEFT  JOIN mid_project_house e on e.houseId=a.houseId
            where 1=1  and b.mainMobile=#callNumber# and b.approveStatus = 1 and a.houseId is  not null GROUP BY a.houseId
            )
            UNION (
            select customerId,b.fullName,c.`name`,a.houseId,'0' as hasApprove,e.buildingName,a.projectId,
            GROUP_CONCAT(relationType) as relationType, b.sex,
            (select GROUP_CONCAT(contentId) from tmp_cust_hobbies_pending b where b.customerId=a.customerId and IFNULL(isDeleted,0)=0 GROUP BY b.customerId)as contentId,
            (select GROUP_CONCAT(identity) from tmp_cust_specialidentity_pending
                where IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate > now() and beginDate < now()
                   or IFNULL(isDeleted,0) = 0 and customerId = a.customerId and endDate is NULL GROUP BY customerId)as identity
             from tmp_customer_house_pending a
            INNER JOIN tmp_customer_pending b on b.id=a.customerId
            LEFT  JOIN main_house c on c.id=a.houseid
            LEFT  JOIN mid_project_house e on e.houseId=a.houseId
            where 1=1  and b.mainMobile= #callNumber# and b.approveStatus = 1 and a.houseId is null GROUP BY a.projectId
            )
            ) tmp
            ORDER BY tmp.hasApprove desc
	    ]]>
    </entry>



    <!-- 查询临时表的客户信息数据 -->
    <entry key="sql.query.tmpcustinfo">
        <![CDATA[
        select  a.id as customerId,a.sex,a.mainMobile,a.fullName,
        (select GROUP_CONCAT(identity)  from dim_cust_specialidentity where customerId=#customerId# and isDeleted=0) as identities,
        (select GROUP_CONCAT(contentId)  from dim_cust_hobbies where customerId=#customerId# and isDeleted=0) as hobbies
        from main_customer a WHERE a.id =#customerId#
	    ]]>
    </entry>
    <!-- 查询正式表的客户信息数据 -->
    <entry key="sql.query.maincustinfo">
        <![CDATA[
        select  a.id as customerId,a.sex,a.mainMobile,a.fullName,
        (select GROUP_CONCAT(identity)  from tmp_cust_specialidentity_pending where customerId=#customerId# and isDeleted=0) as identities,
        (select GROUP_CONCAT(contentId)  from tmp_cust_hobbies_pending where customerId=#customerId# and isDeleted=0) as hobbies
        from tmp_customer_pending a WHERE a.id =#customerId#
	    ]]>
    </entry>
</properties>
