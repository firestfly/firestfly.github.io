<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
	<comment>任务相关查询</comment>
	
    <!-- 查询任务详细信息 -->
    <entry key="service.query.taskrecordsdetail">
        <![CDATA[
			select
			 id,
			 callNo,
			 taskNo,
			 title,
			 content,
			 contactsUserId,
			 contactsName,
			 contactsMobile,
			 projectId,
			 projectCode,
			 projectName,
			 houseId,
			 houseCode,
			 houseName,
			 reportUserMobile,
			 address,
			 businessType,
			 businessTypeText,
			 businessTypeFullCode,
			 appointmentStartTime,
			 appointmentEndTime,
			 status,
			 statusText,
			 issync
			 from task_records where id=#id#
        ]]>
    </entry>

    <!-- 插入任务详细记录 -->
    <entry key="sql.insert.taskrecord">
        <![CDATA[
			insert into `task_records`(`id`,`callNo`,`callRecordId`,`taskNo`,`title`,`content`,`contactsUserId`,`contactsName`,`contactsMobile`,
			`projectId`,`projectCode`,`projectName`,`houseId`,`houseCode`,
			`houseName`,`address`,`businessType`,`businessTypeText`,`businessTypeFullCode`,`reportUserMobile`,`appointmentStartTime`,
			`status`,`statusText`,`isSync`,`lastSyncTime`,`creator`,`creatorId`,`createTime`,`jobNo`,`processingWay`)
			values(#id#,#callNo#,#callRecordId#,#taskNo#,#title#,#content#,#contactsUserId#,#contactsName#,#contactsMobile#,
			#projectId#,#projectCode#,#projectName#,#houseId#,#houseCode#,
			#houseName#,#address#,#businessType#,
			(select businessName from  task_businesstype where businessCode= #businessType# LIMIT 1),
			(SELECT
			concat(
				(
					SELECT
						concat(
							(
								SELECT
									parentCode
								FROM
									task_businesstype
								WHERE
									businessCode = (
										SELECT
											parentCode
										FROM
											task_businesstype
										WHERE
											businessCode = #businessType#
										LIMIT 1
									)
							),
							'.',
							(
								SELECT
									parentCode
								FROM
									task_businesstype
								WHERE
									businessCode = #businessType#
								LIMIT 1
							)
						)
				),
				'.',
				#businessType#
			)),
			#reportUserMobile#,#appointmentStartTime#,
			#status#,
			(SELECT value FROM dim_dictionary_items WHERE dictionaryId = (SELECT id FROM dim_dictionary WHERE code = 'TaskStatus' limit 1) AND code = #status#  LIMIT 1),
			#isSync#,#lastSyncTime#,#creator#,#creatorId#,now(),#jobNo#,#processingWay#)
        ]]>
    </entry>
    
    <!-- 查询本地任务列表 -->
    <entry key="sql.query.task.bytask">
		<![CDATA[
			select 
			t.id,t.callNo,t.taskNo,t.title,t.content,CASE when length(t.content) >20 then concat(left(t.content,20),'...') else t.content end  as contentText,
			t.contactsUserId,t.contactsName,t.contactsMobile,t.projectId,t.projectCode,t.projectName,t.houseId,t.houseCode,
			t.houseName,t.address,t.businessType,t.businessTypeText,t.businessTypeFullCode,t.reportUserMobile,t.appointmentStartTime,t.appointmentEndTime,t.status,
			t.statusText,t.isSync,t.lastSyncTime,t.creator,t.creatorId,t.createTime,r.source,r.sourceText,r.levelType,r.levelTypeText
			from task_records t 
			inner join task_records_extension r on t.id = r.taskId
			where 1=1
			{? and EXISTS (SELECT 1 FROM task_businesstype a
							inner join task_businesstype b on a.parentCode = b.businessCode
							inner join task_businesstype c on b.parentCode = c.businessCode
							where c.businessCode = #AbusinessType# and (t.businessType = a.businessCode or t.businessType = b.businessCode or t.businessType = c.businessCode)) }
			{? and EXISTS (SELECT 1 FROM task_businesstype a
							inner join task_businesstype b on a.parentCode = b.businessCode
							where b.businessCode = #BbusinessType# and (t.businessType = a.businessCode or t.businessType = b.businessCode )) }
			{? and t.status = #status# }
			{? and t.id = #taskId#}
			{? and t.taskNo = #taskNo# }
			{? and t.businessType = #businessType#}
			{? and t.title like CONCAT(CONCAT('%',#title#),'%') ESCAPE '/'}
			{? and t.createTime >= #startTime#}
			{? and t.createTime <= #endTime#}
			{? and t.createTime BETWEEN #startDate# and #endDate#}
			{? and t.projectCode = #projectCode# }
			{? and t.houseCode = #houseCode# }
			{? and t.reportUserMobile = #mobile# }
			{? and r.source = #source#}
			{? and r.levelType = #levelType#}
        ]]>
    </entry>

	<!-- 查询本地任务关联房屋信息 -->
	<entry key="sql.query.houseInfo.bytask">
		<![CDATA[
			select projectCode,projectName,houseCode,houseName,houseId,projectId,
			case WHEN
			(select count(1) from biz_project_notice bpn where bpn.projectCode=tr.projectCode) then 1
			ELSE 0
			end as ishasnotice
			from task_records tr
			where 1=1 and tr.reportUserMobile=#phoneNo#
			{? and status=#status#}
			GROUP BY houseCode
        ]]>
	</entry>
	
	<!-- 查询任务业务类别 -->
	<entry key="sql.query.task.businesstype">
		<![CDATA[
			select a.businessCode,a.businessName,a.parentCode
			from
			task_businesstype a 
			where  a.`status` = 1
			and IFNULL(a.isDeleted,0)=0
			{? and 1=#bs# and a.parentCode is null}
			{? and a.parentCode = #parentCode#}

        ]]>
	</entry>

	<!-- 插入任务来源和类别 -->
	<entry key="sql.insert.taskRecordsExtension">
		<![CDATA[
			insert into task_records_extension(taskId,levelType,levelTypeText,source,sourceText,creator,creatorId,createTime)
			values(#taskId#,#levelType#,
			(SELECT value FROM dim_dictionary_items WHERE dictionaryId IN (SELECT id FROM dim_dictionary WHERE code = 'TaskLevelType') AND code = #levelType#  LIMIT 1),
			#source#,
			(SELECT value FROM dim_dictionary_items WHERE dictionaryId IN (SELECT id FROM dim_dictionary WHERE code = 'TaskSource') AND code = #source#  LIMIT 1),
			#creator#,#creatorId#,now())
        ]]>
	</entry>


	<!-- 查询草稿 -->
	<entry key="sql.query.taskDraft">
		<![CDATA[
			select tr.*,tcr.callTime,tre.levelType,tre.levelTypeText,tre.source,tre.sourceText
  			from task_records tr,tel_call_records tcr,task_records_extension tre
			where  tr.callRecordId = tcr.id
			and tre.taskId=tr.id
			and tr.status=1
			and tr.creatorId=#creatorId#
			order by tcr.callTime desc
        ]]>
	</entry>

	<!-- 更新任务类型信息 -->
	<entry key="sql.update.taskrecordextension">
		<![CDATA[
			update task_records_extension set source=#source#,
			sourceText=(SELECT value FROM dim_dictionary_items WHERE dictionaryId IN (SELECT id FROM dim_dictionary WHERE code = 'TaskSource') AND code = #source# LIMIT 1),
			levelType=#levelType#,
			levelTypeText=(SELECT value FROM dim_dictionary_items WHERE dictionaryId IN (SELECT id FROM dim_dictionary WHERE code = 'TaskLevelType') AND code = #levelType#  LIMIT 1)
			where taskId=#taskId#
        ]]>
	</entry>
	
	<!-- 根据业务类型code获取业务name -->
	<entry key="sql.query.businessName.byBusinessType">
		<![CDATA[
			select a.businessName
			from 
			task_businesstype a 
			where  a.`status` = 1 and a.businessCode = #businessType#
        ]]>
	</entry>

	<!-- 获取超时任务条目数 -->
	<entry key="sql.query.task.AbnormalTaskCount">
		<![CDATA[
			select count(1) from task_abnormal_records
			where 1=1
			{? and followup=#followup#}
			and completed = 0
        ]]>
	</entry>

	<!-- 获取超时任务条目列表 -->
	<entry key="sql.query.task.AbnormalTaskList">
		<![CDATA[
		select * from task_abnormal_records
		where completed=0 and followup_uid=#userId#
		UNION ALL
		select * from task_abnormal_records
		where followup=0
		order by followup_time desc
        ]]>
	</entry>


	<!-- 根据任务流水号获取超时任务信息 -->
	<entry key="sql.query.task.AbnormalTask">
		<![CDATA[
		select * from task_abnormal_records
		where 1=1
		{? and taskNo=#taskNo#}
		{? and followup=#followup#}
		{? and completed=#completed#}
		limit 1
        ]]>
	</entry>

	<!-- 根据任务流水号获取超时任务信息(用于APP更新任务状态) -->
	<entry key="sql.query.task.abnormalTask4App">
		<![CDATA[
		select * from task_abnormal_records
		where 1=1
		and task_status is null
		and taskNo=#taskNo#
		limit 1
        ]]>
	</entry>

	<!-- 更新本地APP任务状态 -->
	<entry key="sql.update.task.AbnormalTask">
		<![CDATA[
		update task_abnormal_records
		set task_status=#task_status#,completed=#completed#
		{? ,completed_time=#completed_time#}
		where taskNo = #taskNo#
		and task_status is  null
        ]]>
	</entry>



	<!-- 根据任务流水号获取本地timeline信息 -->
	<entry key="sql.query.task.localTimeline">
		<![CDATA[
		select tt.*,ttt.name from task_timeline tt,tel_telephonist ttt
		where tt.telephonistId=ttt.id
		and taskNo=#taskNo#
		ORDER BY logtime
        ]]>
	</entry>

	<!-- 查询满意度回访内容 -->
	<entry key="sql.query.task.satisfaction">
		<![CDATA[
			select code,parentCode,content from task_satisfaction
			where status=1
        ]]>
	</entry>

	<!-- 查询当前登陆人的已完成的任务 -->
	<entry key="sql.query.task.followAbnormalTask">
		<![CDATA[
			select a.*,b.`name` as followupName from task_abnormal_records a INNER JOIN tel_telephonist b on a.followup_uid=b.id
			where 1=1
			{? and b.name like CONCAT(CONCAT('%',#followName#),'%') ESCAPE '/'}
			{? and taskNo=#taskNo#}
			{? and abnormal_type=#abnormal_type#}
			{? and completed=#completed#}
			order by  followup_time desc
        ]]>
	</entry>

	<!-- 更新本地timeline日志（把taskNo更新到创建任务前的taskid的日志记录上） -->
	<entry key="sql.update.task.timeline4createTask">
		<![CDATA[
			UPDATE task_timeline set taskNo=#taskNo#
			where taskId=#taskId#
        ]]>
	</entry>

	<!-- 创建一条本地日志 -->
	<entry key="sql.insert.task.localTimeline">
		<![CDATA[
			insert into task_timeline(`id`,`taskId`,`telephonistid`,`logtime`,`content`,`taskNo`,`taskStage`)
			VALUES(null,#taskId#,#telephonistid#,#logtime#,#content#,#taskNo#,#taskStage#)
        ]]>
	</entry>


	<!-- 查询同步任务记录 -->
	<entry key="sql.query.syncTask">
		<![CDATA[
			select task_no,created,contact,mobile,source,crm_source,content,
			project_code,project_name,house_code,house_name,report_user_mobile,status
			from sync_task_records
			where 1=1
			{? and house_code=#houseCode#}
			{? and project_code=#projectCode#}
			{? and content like CONCAT(CONCAT('%',#content#),'%') ESCAPE '/'}
			{? and created >= #startTime#}
			{? and created <= #endTime#}
			order by created
        ]]>
	</entry>


	<!-- 删除草稿 -->
	<entry key="sql.delete.taskDraft">
		<![CDATA[
			delete from task_records where id = #id#
        ]]>
	</entry>

	<!-- 查询一个超时任务是否存在 -->
	<entry key="sql.exist.abnormalTask">
		<![CDATA[
			select count(1) from task_abnormal_records
			where taskNo=#taskNo#
			and abnormal_type=#abnormalType#
			and task_status is null
        ]]>
	</entry>


	<!-- 根据任务ID获取任务流水号 -->
	<entry key="sql.query.tasknobyid">
		<![CDATA[
			SELECT taskNo FROM  task_records where id = #taskId# LIMIT 1
        ]]>
	</entry>


	<!-- 更新本地日志taskno -->
	<entry key="sql.update.timelinebytaskno">
		<![CDATA[
			update task_timeline set taskNo = #taskNo# where taskId = #taskId#
        ]]>
	</entry>


</properties>